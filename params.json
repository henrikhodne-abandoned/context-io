{"name":"ContextIO","body":"ContextIO - Extract data from email\r\n===================================\r\n\r\n## Description\r\n\r\nContextIO is a Ruby wrapper for the [Context.IO][contextio] web service.\r\n\r\nContext.IO is the missing email API that makes it easy and fast\r\nto integrate your user's email data in your application.\r\n\r\nContextIO follows the rules of [Semantic Versioning][semver] and uses\r\n[TomDoc][tomdoc] for inline documentation.\r\n\r\n[contextio]: http://context.io\r\n[semver]: http://semver.org\r\n[tomdoc]: http://tomdoc.org\r\n\r\n\r\n## Installation\r\n\r\nThe best way to install ContextIO is through Rubygems:\r\n\r\n```\r\n$ [sudo] gem install context-io\r\n```\r\n\r\nIf you're installing from source, you can use [Bundler][bundler] to pick up all\r\nthe gems:\r\n\r\n```\r\n$ bundle install\r\n```\r\n\r\n[bundler]: http://gembundler.org\r\n\r\n## Usage\r\n\r\nThe ContextIO classes map pretty much one-to-one to the Context.IO API\r\nresources, which you can find [on their documentation site][contextiodocs].\r\n\r\n[contextiodocs]: http://context.io/docs/2.0\r\n\r\n### Authenticate\r\n\r\nContextIO uses two-legged [OAuth][oauth] for authentication, which means you\r\nneed to get an API key from [Context.IO][contextio]. The API key consists of a\r\nconsumer key and a consumer secret, and once you have them you can set up\r\nContextIO like this:\r\n\r\n```ruby\r\nContextIO.configure do |config|\r\n  config.consumer_key = 'consumer key'\r\n  config.consumer_secret = 'consumer secret'\r\nend\r\n```\r\n\r\n[oauth]: http://oauth.net/\r\n\r\n### Get an Account object\r\n\r\nOnce you're authenticated, you can get an `Account` object, which is what you\r\nwill be dealing with most of the time.\r\n\r\n```ruby\r\naccount = ContextIO::Account.all.first\r\n```\r\n\r\nYou can also find accounts matching a given email address.\r\n\r\n```ruby\r\naccount = ContextIO::Account.all(:email => 'me@example.org').first\r\n```\r\n\r\n## Contributing\r\n\r\nIn the spirit of [free software][free-sw], **everyone** is encouraged to help\r\nimprove this project.\r\n\r\nHere are some ways *you* can contribute:\r\n\r\n* by using alpha, beta and prerelease versions\r\n* by reporting bugs\r\n* by suggesting new features\r\n* by writing or editing documentation\r\n* by writing specifications\r\n* by writing code (**no patch is too small**: fix typos, add comments, clean up\r\n  inconsistent whitespace)\r\n* by refactoring code\r\n* by closing [issues][issues]\r\n* by reviewing patches\r\n\r\n### Submitting an Issue\r\n\r\nWe use the [GitHub issue tracker][issues] to track bugs and features. Before\r\nsubmitting a bug report or feature request, check to make sure it hasn't\r\nalready been submitted. You can indicate support for an existing issue by\r\nwriting a comment saying you have the same issue (please include what version\r\nof the gem you are using, as well as what version of ruby). When submitting a\r\nbug report, please include a [gist][gist] that includes a stack trace and any\r\ndetails that may be necessary to reproduce the bug, including your gem version,\r\nRuby version and operating system. Ideally, a bug report should include a pull\r\nrequest with failing specs.\r\n\r\n### Submitting a Pull Request\r\n\r\n1. Fork the project.\r\n2. Create a topic branch.\r\n3. Implement your feature or bug fix.\r\n4. Add documentation for your feature or bug fix.\r\n5. Run `bundle exec rake yard`. If your changes are not 100% documented, go\r\n   back to step 4.\r\n6. Add specs for your feature or bug fix.\r\n7. Run `bundle exec rake spec`. If your changes are not 100% covered, go back\r\n   to step 6.\r\n8. Commit your changes. If necessary, merge in upstream and rebase your\r\n   changes. Push your changes.\r\n9. Submit a pull request. Please do not include changes to the gemspec,\r\n   version or history file.\r\n\r\n[free-sw]: http://www.gnu.org/philosophy/free-sw.html\r\n[issues]: https://github.com/dvyjones/context-io/issues\r\n\r\n\r\n## Copyright\r\n\r\nCopyright (c) 2012 Henrik Hodne. See LICENSE for details.\r\n","tagline":"ContextIO is a Ruby wrapper for the Context.IO web service.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}